name: build_and_tests
on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - develop
      - main

jobs:
  build-and-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Setup Python
        uses: actions/setup-python@v4.5.0

        with:
          python-version: "3.10.12"

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: '1.6.1'

      - name: Install requirements
        run: poetry install

      - name: Run linters
        run: |
          poetry run black . --check
          poetry run isort . --check
          poetry run flake8 .

      - name: Run Flake8
        run: poetry run flake8 .

      - name: Create .env file
        run: |
          echo "DB_ENGINE"=${{ secrets.DB_ENGINE }}" > .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          
          echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> .env
          echo "WEBAPP_TEST_HOST=${{ secrets.HOST_FOR_TESTS }}" >> .env

      - name: build
        run: docker-compose up --detach

      - name: run tests
        run: poetry run pytest -s
